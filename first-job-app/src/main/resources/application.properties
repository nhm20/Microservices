spring.application.name=first-job-app

#spring.datasource.url=jdbc:mysql://localhost:3306/hibernate
#spring.datasource.username=root
#spring.datasource.password=root@123

#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.jpa.hibernate.ddl-auto=update


#PostgreSQL
spring.datasource.url=jdbc:postgresql://localhost:5432/jobapp
spring.datasource.username=postgres
spring.datasource.password=root@123
spring.jpa.database=POSTGRESQL
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.show-sql=true
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect


#Actuator
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always


info.app.name=First Job Application
info.app.description=This is a sample application to demonstrate Spring Boot with Hibernate and MySQL.
info.app.version=1.0.0

management.info.env.enabled=true


#Docker
#./mvnw spring-b--oot:build-image "-Dspring-boot.build-image.imageName=first-job-app:latest"
#
#docker login
#
#docker push first-job-app

#Postgres Docker
#docker run --name jobapp-db -e POSTGRES_PASSWORD=root@123  postgres:latest

#docker run -d --name pgadmin -e PGADMIN_DEFAULT_EMAIL=admin@admin.com -e PGADMIN_DEFAULT_PASSWORD=admin dpage/pgadmin4

#docker exec -it pgadmin ping jobapp-db

#docker rm -f jobapp-db pgadmin

#docker network create my-network

#docker run -d --name jobapp-db --network my-network -e POSTGRES_PASSWORD=root@123 postgres:latest

#docker run -d --name pgadmin --network my-network -e

#docker run -d --name pgadmin --network my-network -e PGADMIN_DEFAULT_EMAIL=admin@admin.com -e PGADMIN_DEFAULT_PASSWORD=admin dpage/pgadmin4

#docker exec -it pgadmin ping jobapp-db

#docker compose up